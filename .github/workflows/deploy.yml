name: Deploy to ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: my-fastapi-app
  ECS_CLUSTER: my-fargate-cluster
  ECS_SERVICE: fastapi-staging-service

jobs:
  deploy:
    name: Build, Push to ECR, and Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      ## 1. リポジトリのチェックアウト
      - name: Checkout code
        uses: actions/checkout@v3

      ## 2. AWS CLIの設定
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      ## 3. ECRログイン
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      ## 4. Dockerイメージをビルド
      - name: Build Docker image
        run: |
          docker build --no-cache --platform linux/amd64 -t $ECR_REPOSITORY:latest .
          docker tag $ECR_REPOSITORY:latest $ECR_REPOSITORY:${{ github.sha }}

      ## 5. イメージをECRにプッシュ
      - name: Push Docker image to Amazon ECR
        run: |
          docker tag $ECR_REPOSITORY:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:latest
          docker tag $ECR_REPOSITORY:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:${{ github.sha }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:${{ github.sha }}

      ## 6. 新しいタスク定義を登録
      - name: Register new ECS Task Definition
        id: register-task
        run: |
          TASK_DEFINITION_ARN=$(aws ecs register-task-definition \
            --family Fargate \
            --container-definitions '[
              {
                "name": "fastapi-container",
                "image": "'"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ github.sha }}"'",
                "cpu": 256,
                "memory": 512,
                "portMappings": [
                  {
                    "containerPort": 8000,
                    "hostPort": 8000,
                    "protocol": "tcp"
                  }
                ],
                "environment": [
                  {
                    "name": "DATABASE_URL",
                    "value": "mysql+pymysql://user:password@aws-rds-instance/dbname"
                  },
                  {
                    "name": "TEST_KEY",
                    "value": "テスト環境変数"
                  }
                ],
                "logConfiguration": {
                  "logDriver": "awslogs",
                  "options": {
                    "awslogs-group": "/ecs/fastapi-container",
                    "awslogs-region": "'"${{ env.AWS_REGION }}"'",
                    "awslogs-stream-prefix": "ecs"
                  }
                }
              }
            ]' \
            --network-mode awsvpc \
            --requires-compatibilities FARGATE \
            --execution-role-arn "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ecsTaskExecutionRole" \
            --cpu "256" \
            --memory "512" \
            --query "taskDefinition.taskDefinitionArn" \
            --output text)
          
          echo "TASK_DEFINITION_ARN=${TASK_DEFINITION_ARN}" >> $GITHUB_ENV

      ## 7. ECSサービスの更新
      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --task-definition ${{ env.TASK_DEFINITION_ARN }} \
            --force-new-deployment

      ## 8. 確認ステップ
      - name: Verify Deployment
        run: |
          echo "Checking ECS Service Task Definition..."
          aws ecs describe-services \
            --cluster $ECS_CLUSTER \
            --services $ECS_SERVICE \
            --query "services[0].taskDefinition"

          echo "Checking Running Tasks..."
          aws ecs list-tasks \
            --cluster $ECS_CLUSTER \
            --desired-status RUNNING

          echo "Checking Task Environment Variables..."
          TASK_ARN=$(aws ecs list-tasks \
            --cluster $ECS_CLUSTER \
            --desired-status RUNNING \
            --query "taskArns[0]" \
            --output text)
          aws ecs describe-tasks \
            --cluster $ECS_CLUSTER \
            --tasks $TASK_ARN \
            --query "tasks[0].containers[0].environment"
